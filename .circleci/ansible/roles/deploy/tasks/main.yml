---
- name: "update apt packages"
  become: yes
  apt:
    update_cache: yes

- name: "upgrade packages"
  become: yes
  apt:
    upgrade: yes

- name: "remove dependencies no longer required"
  become: yes
  apt:
    autoremove: yes

# - name: install curl
#   become: yes
#   apt: 
#     name: 
#       - curl
#     update_cache: yes
#     cache_valid_time: 3600

# - name: get url
#   become: True 
#   shell: |
#       curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -

# - name: install nodejs, npm
#   become: True
#   apt:
#     name: 
#       - nodejs
#       - npm
#     update_cache: yes
#     cache_valid_time: 3600

# - name: "install pm2"
#   become: yes
#   npm:
#     name: pm2
#     global: yes
#     production: yes
#     state: present

- name: "install nodejs, npm"
  become: yes
  apt:
    name:
      - "nodejs"
      - "npm"
      - "build-essential"
    state: latest
    update_cache: yes

- name: "install pm2"
  become: yes
  npm:
    name: pm2
    global: yes
    production: yes
    state: present

- name: Creates directory
  become: yes
  file:
    path: /home/ubuntu/backend
    state: directory

- name: Unarchive artifacts
  become: yes
  unarchive:
    src: ~/project/artifact.tar.gz
    dest: /home/ubuntu/backend

- name: Start app
  become: yes
  shell: |
    export TYPEORM_HOST="{{ lookup('env', 'TYPEORM_HOST') }}"
    export TYPEORM_ENTITIES="{{ lookup('env', 'TYPEORM_ENTITIES') }}"
    export TYPEORM_USERNAME="{{ lookup('env', 'TYPEORM_USERNAME') }}"
    export TYPEORM_PASSWORD="{{ lookup('env', 'TYPEORM_PASSWORD') }}"
    export TYPEORM_DATABASE="{{ lookup('env', 'TYPEORM_DATABASE') }}"
    export TYPEORM_CONNECTION="{{ lookup('env', 'TYPEORM_CONNECTION') }}"
    export TYPEORM_PORT="{{ lookup('env', 'TYPEORM_PORT') }}"
    export TYPEORM_MIGRATIONS="{{ lookup('env', 'TYPEORM_MIGRATIONS') }}"
    export TYPEORM_DATABASE="{{ lookup('env', 'TYPEORM_DATABASE') }}"
    cd /home/ubuntu/backend
    npm install
    pm2 stop default
    pm2 start npm -- start
  register: print_result

- name: print message
  debug:
    msg: "{{ print_result.stdout_lines }}"